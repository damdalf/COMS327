------------------------------------------------------------------------------
ASSIGNMENT 1.08: Pokemon Battles
-------------------------------------------------------------------------------
04/09/2022:
-------------------------------------------------------------------------------
Read over the assignment, and familiarizing myself with Sheaffer's code from
his 1.07 solution. From there, I have went ahead and written my own summary of
Sheaffer's directions for this assignment. I am going thorugh Sheaffer's code
and leaving comments where neccessary, and then I plan to begin by working on
the generation of a trainer's starting Pokemon.

As of now, I am planning on putting the bulk of my work for this assignment
into the following header and source files:
 - game_events.h
 - game_events.cpp
-------------------------------------------------------------------------------
STATUS:
 - Created game_events.h and game_events.cpp files.
 - Inlcuded an array of type Pokemon (length six) within Character class.
 - Added a default constructor for Pokemon.
 - Added a accessor method to Pokemon class to allow for accessing level.
 - Added another accessor method to Pokemon class to allow for accessing IV
 values.
 - Created the following functions in game_events.cpp and its ccoresponding
 header file:
 	- void bug_bounty() 
	- WINDOW *make_screen()
	- void print_basic_starters_info()
	- void print_stats()
	- void generate_starting_pokemon()
 - Implemented the functionality of choosing a starting Pokemon at the
 beginning of the game.
 - Altered generate_starting_pokemon() to also generate starting Pokemon for
 the NPCs as per the requirements stated in the assignment's PDF.
 - Added a dynamic_cast from Npc to Character and called
 generate_starting_pokemon() in the following methods:
 	- new_hiker()
	- new_rival()
	- new_char_other()
 - Added a num_pokemon to the character class in order to prevent any possible
 issues with accessing uninitialized values.
--------------------------------------------------------------------------------
04/10/2022:
--------------------------------------------------------------------------------
I did not have time today to focus on this assignment, but I am now fixing up
a persisting bug from my work yesertday. The bug was: when pressing an invalid
key during the selection of the player's starting Pokemon, the player's next
input would be skipped. I have now resolved this, making the UI during this
event very smooth.

Beyond this, I plan to create a method that prints a window similar to that
of which the player first sees when starting the game. However, this screen
willprint the basic information for all six of the trainer's Pokemon. 
--------------------------------------------------------------------------------
STATUS:
 - Added a new variable to my print called temp_i which stores the user's
 previous inut, which allows for the seamless UI. Additionally added a default
 case in the switch statement that simply grabs input from the user.
 - Implemented a new function called print_basic_pokemon_info() which prints
 the basic stats for a single pokemon in the correct position of the terminal
 based upon its index. This allows for the player to view their Pokemon
 mid-game.
 - Changed make_screen() to accept a argument of type string which sets the
 title of the new window.
 - Changed the format of print_basic_starters_window() and shortened function
 name to print_starter_window().
 - Changed the title of the function print_stats() to print_pokemon_stats().
 - Verfied that Pokemon are correctly generating for the PC.
 - Verified that Pokemon are correctly (and fairly) generating for NPC's.
 - Implemented the creation of a new screen which displays an NPC's Pokemon
 upon a 'battle' beginning.
 - Implemented dialog (five different messages) from defeated NPC's upon
 encountering them again using Sheaffer's io_queue_message() functionl; really
 nifty.
 - Implemented a function to print the stats of a wild Pokemon and prompt the
 user to decide to try and catch the Pokemon, or to try and run away from the
 Pokemon: print_pokemon_encounter_stats().
--------------------------------------------------------------------------------
 04/12/2022:
--------------------------------------------------------------------------------
Not much to say, focusing on creating proper screens for the remaining events
and then working towards implementing the remaining required features, which
includes:
	- Accurate odds of running away from a wild Pokemon.
	- Trainer battles.
	- Wild Pokemon battles.
	- A functioning bag.
	- Items used having actual effects.
--------------------------------------------------------------------------------STATUS:
 - Changed format of print statement of stats to include fourth move.
 - Changed format of print statement of stats to include fourth move.
 - Added proper prompts and input handling for when viewing a list of the PC's
 pokemon with 'p'.
 - Implemented print_pokemon_stats().
 - Added proper prompts and 'in-place' input handling for wild Pokemon
 encounters and trainer battles.
 - Added a variable to keep track of the trainer's currently active pokemon,
 called active_index which is contained in the Character class.
 - Moved all input handling for the encounter and battling screens to reside
 within their corresponding functions.
 - Added the equation for calculating whether or not an attempt to run away
 during a wild Pokemon encounter works or not - need to ask Sheaffer about
 said equation because I do not think I'm understanding the document
 correctly.
 - Added current_hp to Pokemon class, and added this variable to initially be
 set to the Pokemon's max HP inside the Pokemon constructor.
 - Changed the information shown for a wild Pokemon during an encounter to
 reflect that of a wild encounter from the actual games.
--------------------------------------------------------------------------------
04/18/2022:
--------------------------------------------------------------------------------
Decided to stay away from implementing battle mechanics for the time-being,
and instead focus on implementing the bag and its status effects.
--------------------------------------------------------------------------------
STATUS:
 - Implemented print_bag().
 - Implemented use_item().
 - Implemented print_pokemon_battle().
--------------------------------------------------------------------------------
04/19/2022:
--------------------------------------------------------------------------------
With implementing the bag out of the way, it's time to focus on switching a
Pokemon and beginning the implementation of battling mechanics.
--------------------------------------------------------------------------------
STATUS:
 - Changed print_pokemon_starter_stats() to include MAX HP and shiny status.
 - Changed print_pokemon_stats() to include current HP and shiny status.
 - Implemented functioning healing and reviving.
 - Corrected odds for a shiny Pokemon.
 - Implemented switch_pokemon() and print_switch_pokemon(), but unable to
 really test until battling for wild Pokemon is implemented so that PC can
 capture new Pokemon.
-------------------------------------------------------------------------------
04/20/2022:
--------------------------------------------------------------------------------
With switching Pokemon (hopefully) out of the way, it's time to finish the
battling mechanics for wild Pokemon encounters.
--------------------------------------------------------------------------------
STATUS:
 - Implemented calculate_damage_wild() to calculate the damage of one of the
 wild Pokemon's moves, which is randomly selected.
 - Implemented calculate_damage_pc() to calculate the damage of the PC's
 active Pokemon's selected move.
 - Battle screen now updates with these calculations.
 - PC is prompted to choose a new active Pokemon upon their current Pokemon
 becoming knocked out, with corresponding error messages.
 - If all of a PC's Pokemon are knocked out, a message of defeat is displayed,
 and the battled is exited.
 - Implemented calculate_damage_npc() to calculate the damage of a randomly
 selected move of an NPC's active Pokemon.
 - Implemented print_trainer_battle(), and changed the already existing method
 to print_trainer_encounter().
 - Implemented switch_pokemon_npc() to iterate through all of an NPC's Pokemon
 and select a non-defeated Pokemon. If all of an NPC's Pokemon are defeated,
 then do not switch any. Could later be modulated to mark the NPC defeated in
 this function.
 - Implemented a message that is displayed instead of entering a battle with a
 trainer when the PC's current Pokemon is knocked out.
 - Added pokemon_stats.csv to db_parse.h and db_parse.cpp and parsed the CSV
 file.
 - Implemented STAB data from said CSV file, and handled Pokemon species with
 two types. Definitely could later be modulated / more 'future-proofed'.
 - Resolved issue in which a NULL move's priority being checked. Would've been
 easier to remove the ability to select a NULL move, but I figured the
 functionality would be more 'future-proofed' by simply adding another check.
 - Added a check within use_item to ensure that an item is only actually used
 on an existing Pokemon, we don't want items being used from misclicks! 
--------------------------------------------------------------------------------
TO BE DONE AFTER THIS ASSIGNMENT IS DUE:
--------------------------------------------------------------------------------
 * TODO: Change use_item() to return an int to indicate whether or not an item
 * TODO: Add display messages for when a move hits.
 * TODO: Flesh out healing system with better messages displayed.
 was used on an existing Pokemon, and if not, print a different title in the
 window to inform the PC that the item was not used.
 * TODO: Add num_escapes as an argument to wild Pokemon battle.
 * TODO: Would be cool if PC's active Pokemon was displayed when opening
 PC's Bag.
 * TODO: Remove active_index as I am now regarding the first index to
 always serve as trainer's active Pokemon.
 * TODO: Reorganize order of methods in game_events.h and game_events.ccp.
 * TODO: Clean up (and modulate) code substantially.
--------------------------------------------------------------------------------
